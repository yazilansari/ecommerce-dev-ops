name: CI/CD Pipeline
on:
  push:
    branches: [master]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies for nextjs-app
      run: |
        cd nextjs-app
        npm install

    - name: Install dependencies for auth-service
      run: |
        cd auth-service
        npm install

    - name: Install dependencies for orders-service
      run: |
        cd orders-service
        npm install

    - name: Install dependencies for payment-service
      run: |
        cd payment-service
        npm install

    - name: Install dependencies for products-service
      run: |
        cd products-service
        npm install

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push nextjs-app
      uses: docker/build-push-action@v5
      with:
        context: ./nextjs-app
        push: true
        tags: |
          yazilansari/nextjs-app:latest
          yazilansari/nextjs-app:${{ github.sha }}

    - name: Build and push auth-service
      uses: docker/build-push-action@v5
      with:
        context: ./auth-service
        push: true
        tags: |
          yazilansari/auth-service:latest
          yazilansari/auth-service:${{ github.sha }}

    - name: Build and push orders-service
      uses: docker/build-push-action@v5
      with:
        context: ./orders-service
        push: true
        tags: |
          yazilansari/orders-service:latest
          yazilansari/orders-service:${{ github.sha }}

    - name: Build and push payment-service
      uses: docker/build-push-action@v5
      with:
        context: ./payment-service
        push: true
        tags: |
          yazilansari/payment-service:latest
          yazilansari/payment-service:${{ github.sha }}

    - name: Build and push products-service
      uses: docker/build-push-action@v5
      with:
        context: ./products-service
        push: true
        tags: |
          yazilansari/products-service:latest
          yazilansari/products-service:${{ github.sha }}

    - name: Update deployment image tags
      run: |
        sed -i "s|yazilansari/nextjs-app:.*|yazilansari/nextjs-app:${{ github.sha }}|" k8s/nextjs-deployment.yaml
        sed -i "s|yazilansari/auth-service:.*|yazilansari/auth-service:${{ github.sha }}|" k8s/auth-deployment.yaml
        sed -i "s|yazilansari/orders-service:.*|yazilansari/orders-service:${{ github.sha }}|" k8s/orders-deployment.yaml
        sed -i "s|yazilansari/payment-service:.*|yazilansari/payment-service:${{ github.sha }}|" k8s/payment-deployment.yaml
        sed -i "s|yazilansari/products-service:.*|yazilansari/products-service:${{ github.sha }}|" k8s/products-deployment.yaml
        cat k8s/nextjs-deployment.yaml
        cat k8s/auth-deployment.yaml
        cat k8s/orders-deployment.yaml
        cat k8s/payment-deployment.yaml
        cat k8s/products-deployment.yaml

    - name: Copy manifests to local machine
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "k8s/*"
        target: "/home/${{ secrets.SSH_USER }}/Desktop/ecommerce-ci-cd"
        port: 22
        timeout: 60s
        command_timeout: 600s
        overwrite: true

    - name: Deploy to Local Minikube
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          minikube start
          kubectl apply -f /home/${{ secrets.SSH_USER }}/Desktop/ecommerce-ci-cd/k8s/
          kubectl rollout status deployment/nextjs-deployment --timeout=600s
          kubectl rollout status deployment/auth-deployment --timeout=600s
          kubectl rollout status deployment/orders-deployment --timeout=600s
          kubectl rollout status deployment/payment-deployment --timeout=600s
          kubectl rollout status deployment/products-deployment --timeout=600s
